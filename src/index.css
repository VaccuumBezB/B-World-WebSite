:root {
  --bw-gradient: linear-gradient(45deg, #057fd7, #55d555);
  --bw-gradient-looped: linear-gradient(45deg, #057fd7, #55d555, #057fd7);
  --bw-col1: #057fd7;
  --bw-col2: #55d555;

  --gray: #343434;
}

html {
  cursor: none !important;
}

button {
  cursor: none
}

body {
  background: black;
  color: whitesmoke;

  z-index: 2;
  transition: 0.2s;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  -ms-overflow-style: none;
  /* Internet Explorer 10+ */
  scrollbar-width: none;
  scrollbar-color: rgba(0, 0, 0, 0)
    /* Firefox */
}

body::-webkit-scrollbar {
  display: none;
  /* Safari and Chrome */
}

main {
  min-height: 800px;
  height: 100vh;
}

.container {
  display: flex;
  gap: 20px;
  flex-wrap: wrap;
  justify-content: center;
  align-items: stretch;
  align-content: stretch;

  height: 99%;
}

.item:nth-child(1) {
  height: 200px;
  align-self: flex-start;
  flex-grow: 1;
}

.item:nth-child(2) {
  height: 200px;
  order: 2;
  align-self: center;
  /*flex-shrink: 1;*/
  flex-grow: 1;
}

.item:nth-child(3) {
  height: 200px;
  flex-grow: 2;
  order: 1;
  align-self: flex-end;
  /*flex-shrink: 1;*/
}

.panel {
  background-color: rgba(255, 255, 255, 0.19);
  border-radius: 16px;
  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(7.8px);
  -webkit-backdrop-filter: blur(7.8px);
  border: 1px solid rgba(255, 255, 255, 0.3);

  padding: 20px;
  margin: 10px;
}


.card {
  background: linear-gradient(163deg, var(--bw-col2) 0%, var(--bw-col1) 100%);
  border-radius: 16px;
  transition: all .3s;

  transform: scale(0);
}

.card2 {
  background-color: #1a1a1a;
  border-radius: 16px;
  transition: all .2s;

  height: 100%;
  width: 100%;

  align-content: center;
}

.card2:hover {
  transform: scale(0.98);
  border-radius: 20px;
}

.card:hover {
  box-shadow: 0px 0px 30px 1px rgba(0, 255, 117, 0.30);
}

.sparkle-button {
  --active: 0;
  --bg: radial-gradient(40% 50% at center 100%,
      hsl(138 calc(var(--active) * 97%) 72% / var(--active)),
      transparent),
    radial-gradient(80% 100% at center 120%,
      hsl(153 calc(var(--active) * 97%) 70% / var(--active)),
      transparent),
    hsl(138 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
  background: var(--bg);
  font-size: 1.2rem;
  font-weight: 500;
  border: 0;
  padding: 1em 1em;
  display: flex;
  align-items: center;
  gap: 0.25em;
  white-space: nowrap;
  border-radius: 100px;
  position: relative;
  box-shadow: 0 0 calc(var(--active) * 3em) calc(var(--active) * 1em) var(--bw-col2),
    0 0em 0 0 hsl(138 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
    0 -0.05em 0 0 hsl(153 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
  transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
  scale: calc(1 + (var(--active) * 0.1));
  transition: .3s;

  margin: 0 auto;
}

.sparkle-button:active {
  scale: 1;
  transition: .3s;
}

.sparkle path {
  color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
  transform-box: fill-box;
  transform-origin: center;
  fill: currentColor;
  stroke: currentColor;
  animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
  animation-duration: 0.6s;
  transition: color var(--transition);
}

.sparkle-button:is(:hover, :focus-visible) path {
  animation-name: bounce;
}

@keyframes bounce {

  35%,
  65% {
    scale: var(--scale);
  }
}

.sparkle path:nth-of-type(1) {
  --scale: 0.5;
  --delay: 0.1;
  --base: 40%;
}

.sparkle path:nth-of-type(2) {
  --scale: 1.5;
  --delay: 0.2;
  --base: 20%;
}

.sparkle path:nth-of-type(3) {
  --scale: 2.5;
  --delay: 0.35;
  --base: 30%;
}

.sparkle-button:before {
  content: "";
  position: absolute;
  inset: -0.2em;
  z-index: -1;
  border: 0.25em solid hsl(154 97% 50% / 0.5);
  border-radius: 100px;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.spark {
  position: absolute;
  inset: 0;
  border-radius: 100px;
  rotate: 0deg;
  overflow: hidden;
  mask: linear-gradient(white, transparent 50%);
  animation: flip calc(var(--spark) * 2) infinite steps(2, end);
}

@keyframes flip {
  to {
    rotate: 360deg;
  }
}

.spark:before {
  content: "";
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 0%;
  left: 50%;
  z-index: -1;
  translate: -50% -15%;
  rotate: 0;
  transform: rotate(-90deg);
  opacity: calc((var(--active)) + 0.4);
  background: conic-gradient(from 0deg,
      transparent 0 340deg,
      white 360deg);
  transition: opacity var(--transition);
  animation: rotate var(--spark) linear infinite both;
}

.spark:after {
  content: "";
  position: absolute;
  inset: var(--cut);
  border-radius: 100px;
}

.backdrop {
  position: absolute;
  inset: var(--cut);
  background: var(--bg);
  border-radius: 100px;
  transition: background var(--transition);
}


.pointer {
  pointer-events: none;
  position: fixed;
  z-index: 50;
  inset: 0;
}

.pointer-child {
  position: absolute;
  border-radius: 100%;

  /*background: #fff;*/
  backdrop-filter: invert(100%);
}

.pointer-shadow {
  position: absolute;
  border-radius: 100%;
  /*background: #fff;*/

  border: 1px white solid;
}

@keyframes rotate {
  to {
    transform: rotate(90deg);
  }
}

@supports(selector(:has(:is(+ *)))) {
  body:has(button:is(:hover, :focus-visible)) {
    --active: 1;
    --play-state: running;
  }

  .bodydrop {
    display: none;
  }
}

.sparkle-button:is(:hover, :focus-visible)~ :is(.bodydrop, .particle-pen) {
  --active: 1;
  --play-state: runnin;
}

.sparkle-button:is(:hover, :focus-visible) {
  --active: 1;
  --play-state: running;
}

.sp {
  position: relative;
}

.particle-pen {
  position: absolute;
  width: 200%;
  aspect-ratio: 1;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  -webkit-mask: radial-gradient(white, transparent 65%);
  z-index: -1;
  opacity: var(--active, 0);
  transition: opacity var(--transition);
}

.particle {
  fill: white;
  width: calc(var(--size, 0.25) * 1rem);
  aspect-ratio: 1;
  position: absolute;
  top: calc(var(--y) * 1%);
  left: calc(var(--x) * 1%);
  opacity: var(--alpha, 1);
  animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
  transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
  z-index: -1;
  animation-play-state: var(--play-state, paused);
}

.particle path {
  fill: hsl(0 0% 90%);
  stroke: none;
}

.particle:nth-of-type(even) {
  animation-direction: reverse;
}

@keyframes float-out {
  to {
    rotate: 360deg;
  }
}

.text {
  translate: 2% -6%;
  letter-spacing: 0.01ch;
  background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
  -webkit-background-clip: text;
  color: transparent;
  transition: background var(--transition);
}

.sparkle-button svg {
  inline-size: 1.25em;
  translate: -25% -5%;
}



canvas {
  position: absolute !important;
  /*left: 0;*/
  top: 0 !important;
  z-index: -22 !important;

  background: url(../public/img/space.jpg) no-repeat center center;
  background-size: cover;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;

  padding: 20px;
  padding-top: 40px;
  box-shadow: #fff 0px 0px 10px;
  margin-top: 10px;
  background-color: #19191955;
  backdrop-filter: blur(10px);
  border: var(--gray) 2px;
  display: inline-block;

  text-align: left;

  width: 700px;
  height: 400px;

  border-radius: 30px;

  transition: .7s;
}

code:hover {
  transition: .7s;
  transform: scale(1.1);
}

.red {
  color: red;
}

a {
  cursor: none;
  text-decoration: none;

  color: var(--bw-col1);
}

a.link {
  color: white;
  background: var(--bw-gradient-looped);
  animation: moveBG 2s infinite linear;
  background-size: 900%;
}

.version-container {
  display: grid;
  grid-template-areas: 'stack';
}

.version {
  grid-area: stack;
  z-index: 0;

  background-color: #1a1a1a;
  border-radius: 30px;

  display: flex;
  transform: scaleY(0.9);
}

.version-container:hover .effects {
  background-position-x: right;
  transition: 3s cubic-bezier(0.165, 0.84, 0.44, 1);
}

.effects {
  background: var(--bw-gradient-looped);
  border-radius: 30px;
  filter: blur(10px);

  grid-area: stack;

  width: 100%;
  z-index: -1;
  min-height: 55px;
  transition: 3s cubic-bezier(0.165, 0.84, 0.44, 1);
  background-size: 200%;
  background-position: left;
}

.version h3 {
  color: white;
  margin-left: 20px;
}

.version p {
  right: 10px;
}

.scroll-section {
  overflow: auto;
  height: 100%;

  scroll-behavior: smooth;
  z-index: 0;
}

.wrapper {
  position: absolute;
  width: 95%;
}

.wrapper::after {
  z-index: 2;
  content: "";
  width: 100%;
  height: 10%;
  display: block;
  position: absolute;

  background: linear-gradient(to bottom, transparent 0%, #000 100%);
  bottom: 0;
}

ul {
  list-style: none;
}

li {
  margin: 10px;
}


@keyframes moveBG {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 100% 0;
  }
}